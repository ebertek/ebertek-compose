# %YAML 1.2
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json  # yamllint disable-line
---
# version: "3.9"
name: ygg-core

networks:
  macvlan1:
    external: true

x-env: &env
  dns:
    - 10.4.21.34
    - 1.1.1.1
  dns_search: int.tnt.photo
  environment:
    TZ: Europe/Stockholm
  restart: "no"
  stop_grace_period: 2m

services:
  omada:
    <<: *env
    container_name: omada
    cpu_count: 1
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 2500M
    environment:
      PUID: 1028
      PGID: 100
    hostname: omada
    image: "docker.io/mbentley/omada-controller:latest"
    mac_address: "0e:be:00:da:00:38"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.38
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    volumes:
      - "/volume2/docker/omada/data:/opt/tplink/EAPController/data"
      - "/volume2/docker/omada/logs:/opt/tplink/EAPController/logs"
      - "/volume2/docker/omada/work:/opt/tplink/EAPController/work"
      - "/volume2/docker/acmesh/tnt.photo_ecc/tnt.photo.key:/cert/tls.key"
      - "/volume2/docker/acmesh/tnt.photo_ecc/fullchain.cer:/cert/tls.crt"

  cloudflared:
    <<: *env
    command: tunnel run
    container_name: cloudflared
    cpu_count: 1
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 100M
    env_file: cloudflared.txt
    hostname: cloudflared
    image: "docker.io/cloudflare/cloudflared:latest"
    mac_address: "0e:be:00:da:00:37"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.37
    sysctls:
      net.ipv4.ip_local_port_range: "11000 60999"
    ulimits:
      nofile:
        soft: 70000
        hard: 70000

  dns:
    <<: *env
    container_name: dns
    cpu_count: 1
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 1000M
        reservations:
          # cpus: "0.002"
          memory: 200M
    environment:
      DNS_SERVER_DOMAIN: dns
    hostname: dns
    image: "docker.io/technitium/dns-server:latest"
    mac_address: "0e:be:00:da:00:34"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.34
    sysctls:
      net.ipv4.ip_local_port_range: "1024 65000"
    volumes:
      - "/volume2/docker/dns:/etc/dns"
      - "/volume2/docker/acmesh/tnt.photo_ecc/tnt.photo.pfx:/etc/dns/tnt.photo.pfx"

  npm:
    <<: *env
    cap_add:
      - NET_BIND_SERVICE
    container_name: npm
    cpu_count: 1
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 250M
    healthcheck:
      test: ["CMD", "/usr/bin/check-health"]
      interval: 10s
      timeout: 3s
    hostname: npm
    image: "docker.io/jc21/nginx-proxy-manager:latest"
    mac_address: "0e:be:00:da:00:35"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.35
    # sysctls:
    #   net.ipv4.ip_unprivileged_port_start: 80
    volumes:
      - "/volume2/docker/npm:/data"
      - "/volume2/docker/acmesh:/etc/letsencrypt"
      - "/volume2/docker/acmesh/tnt.photo_ecc/fullchain.cer:/data/custom_ssl/npm-2/fullchain.pem"
      - "/volume2/docker/acmesh/tnt.photo_ecc/tnt.photo.key:/data/custom_ssl/npm-2/privkey.pem"

  traefik:
    <<: *env
    container_name: traefik
    cpu_count: 1
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 250M
    hostname: traefik
    image: "traefik:v3"
    mac_address: "0e:be:00:da:00:44"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.44
    volumes:
      - "/volume2/docker/traefik/dynamic.yml:/etc/traefik/dynamic.yml"
      - "/volume2/docker/traefik/traefik.yml:/etc/traefik/traefik.yml"
      - "/volume2/docker/acmesh/tnt.photo_ecc/:/certs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
