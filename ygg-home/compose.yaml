# %YAML 1.2
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json  # yamllint disable-line
---
# version: "3.9"
name: ygg-home

networks:
  macvlan1:
    external: true

x-env: &env
  dns:
    - 10.4.21.34
    - 1.1.1.1
  dns_search: int.tnt.photo
  environment:
    PUID: 1028
    PGID: 100
    TZ: Europe/Stockholm
  restart: "no"
  stop_grace_period: 3m

services:
  plex:
    <<: *env
    container_name: plex
    devices:
      - "/dev/dri:/dev/dri"
    deploy:
      resources:
        limits:
          # cpus: "4"
          memory: 1000M
    env_file: plex.txt
    environment:
      PLEX_UID: 1028
      PLEX_GID: 100
      ALLOWED_NETWORKS: 10.4.21.0/24
    hostname: plex
    image: "docker.io/plexinc/pms-docker:latest"
    mac_address: "0e:be:00:da:00:40"
    networks:
      macvlan1:
        aliases:
          - plex.int.tnt.photo
          - plex.ext.tnt.photo
        ipv4_address: 10.4.21.40
    volumes:
      - "/volume1/docker/plex/config:/config"
      - "/volume1/docker/acmesh/tnt.photo_ecc/tnt.photo.pfx:/config/tnt.photo.pfx"
      - "/volume1/docker/plex/transcode:/transcode"
      - "/volume1/Downloads:/data"

  tautulli:
    <<: *env
    container_name: tautulli
    cpu_count: 1
    depends_on:
      - plex
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 250M
    hostname: tautulli
    image: "ghcr.io/tautulli/tautulli:latest"
    mac_address: "0e:be:00:da:00:41"
    networks:
      macvlan1:
        aliases:
          - tautulli.int.tnt.photo
          - tautulli.ext.tnt.photo
        ipv4_address: 10.4.21.41
    volumes:
      - "/volume1/docker/tautulli:/config"
      - "/volume1/docker/plex/config/Library/Application Support/Plex Media Server/Logs:/logs:ro" # yamllint disable-line
      - "/volume1/docker/acmesh/tnt.photo_ecc/tnt.photo.key:/config/server.key"
      - "/volume1/docker/acmesh/tnt.photo_ecc/fullchain.cer:/config/server.crt"

  discordpy:
    <<: *env
    container_name: discordpy
    cpu_count: 1
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 250M
    env_file: discordpy.txt
    hostname: discordpy
    image: "ghcr.io/ebertek/bjornify:latest"
    mac_address: "0e:be:00:da:00:52"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.52
    stop_signal: SIGINT
    user: "1028:100"
    volumes:
      - "/volume1/docker/discordpy/logs:/app/logs"
      - "/volume1/docker/discordpy/secrets:/app/secrets"

  tmm:
    <<: *env
    container_name: tmm
    cpu_count: 2
    deploy:
      resources:
        limits:
          # cpus: "2"
          memory: 1280M
    environment:
      USER_ID: 1028
      GROUP_ID: 100
      UMASK: 002
      ALLOW_DIRECT_VNC: false
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      LC_TIME: C.UTF-8
    hostname: tmm
    image: "docker.io/tinymediamanager/tinymediamanager:latest"
    mac_address: "0e:be:00:da:00:53"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.53
    volumes:
      - "/volume1/docker/tmm/data:/data"
      # - "/volume1/docker/tmm/app/addons:/app/addons"
      - "/volume1/Downloads:/downloads"

  books:
    <<: *env
    container_name: books
    cpu_count: 1
    # depends_on:
    #   calibre:
    #     condition: service_started
    deploy:
      resources:
        limits:
          # cpus: "1"
          memory: 500M
    environment:
      UMASK: 002
      # DOCKER_MODS: "linuxserver/mods:universal-calibre"  # Doesn't work due to old Synology kernel
      DOCKER_MODS: >
        lscr.io/linuxserver/mods:universal-calibre-v7.16.0|
        lscr.io/linuxserver/mods:calibre-web-dtrpg-metadata
      OAUTHLIB_RELAX_TOKEN_SCOPE: 1
    hostname: books
    image: "lscr.io/linuxserver/calibre-web:latest"
    mac_address: "0e:be:00:da:00:59"
    networks:
      macvlan1:
        ipv4_address: 10.4.21.59
    volumes:
      - "/volume1/docker/calibre-web:/config"
      - "/volume1/Downloads:/downloads"
